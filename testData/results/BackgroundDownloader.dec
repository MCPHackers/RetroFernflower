package com.mojang.minecraft;

import com.mojang.minecraft.BackgroundDownloader.OS;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.net.URL;

public final class BackgroundDownloader extends Thread {
   private File resourcesFolder;
   private Minecraft minecraft;
   boolean closing = false;


   public BackgroundDownloader(Minecraft minecraft1) {
      this.minecraft = minecraft1;
      this.setName("Resource download thread");
      this.setDaemon(true);
      File file10001 = new File;
      String string2 = "minecraft";
      String string4 = System.getProperty("user.home", ".");
      String string3;
      File file5;
      switch(OSMap.osValues[((string3 = System.getProperty("os.name").toLowerCase()).contains("win") ? OS.windows : (string3.contains("mac") ? OS.macos : (string3.contains("solaris") ? OS.solaris : (string3.contains("sunos") ? OS.solaris : (string3.contains("linux") ? OS.linux : (string3.contains("unix") ? OS.linux : OS.unknown)))))).ordinal()]) {
      case 1:
      case 2:
         file5 = new File(string4, '.' + string2 + '/');
         break;
      case 3:
         if((string3 = System.getenv("APPDATA")) != null) {
            file5 = new File(string3, "." + string2 + '/');
         } else {
            file5 = new File(string4, '.' + string2 + '/');
         }
         break;
      case 4:
         file5 = new File(string4, "Library/Application Support/" + string2);
         break;
      default:
         file5 = new File(string4, string2 + '/');
      }

      if(!file5.exists() && !file5.mkdirs()) {
         throw new RuntimeException("The working directory could not be created: " + file5);
      } else {
         file10001.<init>(file5, "resources/");
         this.resourcesFolder = file10001;
         if(!this.resourcesFolder.exists() && !this.resourcesFolder.mkdirs()) {
            throw new RuntimeException("The working directory could not be created: " + this.resourcesFolder);
         }
      }
   }

   public final void run() {
      // $FF: Couldn't be decompiled
   }

   private void downloadResource(URL uRL1, File file2) {
      System.out.println("Downloading " + uRL1);
      byte[] b3 = new byte[4096];
      DataInputStream dataInputStream5 = new DataInputStream(uRL1.openStream());
      DataOutputStream dataOutputStream6 = new DataOutputStream(new FileOutputStream(file2));
      boolean z4 = false;

      do {
         int i7;
         if((i7 = dataInputStream5.read(b3)) < 0) {
            dataInputStream5.close();
            dataOutputStream6.close();
            return;
         }

         dataOutputStream6.write(b3, 0, i7);
      } while(!this.closing);

   }
}

class 'com/mojang/minecraft/BackgroundDownloader' {
   method '<init> (Lcom/mojang/minecraft/Minecraft;)V' {
      b      16
      f      17
      11      17
      15      18
      16      18
      1f      20
      21      20
      23      21
      25      21
      27      21
      2a      21
      2b      24
      2e      24
      30      24
      33      24
      37      24
      38      24
      3a      24
      3d      24
      40      24
      47      24
      49      24
      4c      24
      4f      24
      56      24
      58      24
      5b      24
      5e      24
      65      24
      67      24
      6a      24
      6d      24
      74      24
      76      24
      79      24
      7c      24
      83      24
      85      24
      88      24
      8b      24
      91      24
      94      24
      97      24
      98      24
      c4      27
      cd      27
      d2      27
      d8      27
      d9      28
      dc      30
      de      30
      e2      30
      e3      30
      f2      31
      fb      31
      100      31
      106      31
      116      33
      11f      33
      124      33
      12a      33
      13a      37
      143      37
      149      37
      14a      38
      15d      40
      162      40
      168      40
      16a      43
      16d      43
      171      43
      174      43
      182      44
      18b      44
      191      44
      193      46
      195      46
      198      47
      19c      48
      19f      48
      1a2      48
      1a6      48
      1a9      48
      1ac      48
      1ba      49
      1c0      49
      1c6      49
      1cc      49
      1cd      52
   }

   method 'downloadResource (Ljava/net/URL;Ljava/io/File;)V' {
      0      59
      a      59
      14      59
      17      59
      1a      60
      1f      60
      25      61
      2b      61
      3b      62
      3c      63
      3d      63
      41      67
      45      67
      47      67
      4c      73
      4f      73
      53      74
      56      74
      59      76
      5b      68
      5f      69
      62      70
   }
}

Lines mapping:
